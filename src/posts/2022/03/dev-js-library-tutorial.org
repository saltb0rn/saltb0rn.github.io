#+title: JS库开发指南 (WIP)
#+date: 2022-03-23
#+status: wd
#+index: JS库开发指南
#+tags: Javascript
#+begin_abstract
最近公司给我分配了一个任务: 需要开发一个 3D 拓扑图的库.

以前一直都是写应用的, 没有写 JS 库的经验, 现在正好来了一个学习的机会.
# 记录开发一个Javascript库的过程
#+end_abstract

*** 工具的选择

**** 构建工具

     我的选择范围主要是这几个: =Webpack=, =Rollup=, =Glup=, =Grunt=, =ES Build=, 最终我的个人是 =Rollup=.

     主要原因是 =Rollup= 支持生成 =CommonJS= =UMD= 以及 =ES-Module=, 打包[[https://juejin.cn/post/6956117965620117541?msclkid=2d7f306fb00711ecb220eabd03a972cd][不同格式]]的模块对于发布库来说是很有必要的;

     相比功能强大的 =Webpack= 来说, =Rollup= 的打包速度更加快, 配置更加容易上手;

     另外 =ES Build= 的打包更快, 但我没看到官网上写它支持导出 =UMD= 模块, 所以即便它效率高得诱人,不过也只能留到下次再选择它了.

**** package.json 配置

     其次,开发一个 =JS= 库项的第一步应该是先确定好开发, 测试以及发布的流程, 然后根据流程配置好项目的 =NPM= 的 =package.json= 文件,

     这个时候常备一个 [[https://docs.npmjs.com/cli/v8/configuring-npm/package-json][package.json 配置说明]] 的链接在身.

     学习配置 =package.json= 的捷径是找一个成熟的项目, 然后阅读它的 =package.json= 文件.

     如果你看别人的 =package.json= 文件, 你可能还会看到一些 package.json 配置说明上没有的配置项, 请不要怀疑自己看错文档了,

     那些配置项通常是别的一些工具的配置项, 比如说 ="eslintConfig"= 就是 =ESLint= 自己的配置项, 具体说明可以看这里 [[https://eslint.org/docs/user-guide/configuring/configuration-files#configuration-file-formats][ESLint 配置手册]],

     如果觉得一件工具的配置起来很难, 那必然是没有理解它每一个配置项对应的概念, 因此配置之前先确保自己了解好 =ESLint= 的 [[https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments][Environments]], [[https://eslint.org/docs/user-guide/configuring/language-options#specifying-globals][Globals]], [[https://eslint.org/docs/user-guide/configuring/rules][Rules]] 以及 [[https://eslint.org/docs/user-guide/configuring/plugins][Plugins]] 这几个概念.

     其中 =Rules= 关系到 =ESLint= 如何检测你的代码, 如何配置就需要根据自己自己的开发习惯来按照 [[https://eslint.org/docs/rules/][ESLint Rules]] 上面来配.

     我是以 [[https://github.com/mrdoob/three.js/blob/dev/package.json][three.js 的 package.json 文件]] 作为学习参考, 个人体验下来就是第一次阅读的时候需要经常参考 =ESLint= 的配置手册以及搜索它的 =plugins= 的作用和文档,

     第二次阅读就基本只查 =plugins= 的文档了, 这么算下来是已经掌握基本用法了.

     然后我选择了 =Babel= 作为 =JavaScript= 编译器, [[https://babeljs.io/docs/en/options][它的配置说明]] 在这里.

     总之, 在阅读的过程中, 你需要频繁使用搜索引擎来检索 =package.json= 里面那些你不熟悉作用的开发工具, 了解它们是干什么的, 了解如何配置.
